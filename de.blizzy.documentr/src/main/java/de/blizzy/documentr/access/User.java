/*
documentr - Edit, maintain, and present software documentation on the web.
Copyright (C) 2012-2013 Maik Schreiber

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
package de.blizzy.documentr.access;

import java.util.Iterator;
import java.util.Set;

import lombok.Getter;

import com.google.common.collect.Sets;

/** Represents a user. */
public class User {
	@Getter
	private String loginName;
	@Getter
	private String password;
	@Getter
	private String email;
	@Getter
	private boolean disabled;
	@Getter
	private Set<OpenId> openIds = Sets.newHashSet();

	/**
	 * Constructs a new user.
	 *
	 * @param loginName the user's login name
	 * @param password The user's password. This must be an encoded password as generated by the application's
	 *        password encoder.
	 * @param email the user's E-Mail address
	 * @param disabled <code>true</code> if the user's account is disabled, thus preventing login
	 */
	public User(String loginName, String password, String email, boolean disabled) {
		this.loginName = loginName;
		this.password = password;
		this.email = email;
		this.disabled = disabled;
	}

	/** Adds an OpenID to this user. */
	public void addOpenId(OpenId openId) {
		openIds.add(openId);
	}

	/** Removes an OpenID from this user. Lookup is done using the OpenID's delegate ID. */
	public void removeOpenId(String openId) {
		for (Iterator<OpenId> iter = openIds.iterator(); iter.hasNext();) {
			OpenId id = iter.next();
			if (id.getDelegateId().equals(openId)) {
				iter.remove();
			}
		}
	}
}
